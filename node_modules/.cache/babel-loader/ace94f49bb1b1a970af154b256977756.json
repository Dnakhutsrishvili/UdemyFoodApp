{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\techno city\\\\Desktop\\\\udemy food\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartState = {\n  items: [],\n  amount: 0\n};\n\nconst cardReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    console.log(state.totalAmount);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultcartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cardReducer, defaultcartState);\n\n  const AddToCartHendler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const RemoveItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      item: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: AddToCartHendler,\n    removeItem: RemoveItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"SxdyLGZ5uKDgYcj6eKNk3HR0yXI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/techno city/Desktop/udemy food/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultcartState","items","amount","cardReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","totalAmount","price","console","log","CartProvider","props","cartState","dispatchCartAction","AddToCartHendler","RemoveItemFromCart","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,MAAM,EAAE;AAFe,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GACtBN,KAAK,CAACO,WAAN,GAAoBN,MAAM,CAACI,IAAP,CAAYG,KAAZ,GAAoBP,MAAM,CAACI,IAAP,CAAYP,MADtD;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACO,WAAlB;AACA,WAAO;AACLV,MAAAA,KAAK,EAAEM,YADF;AAELI,MAAAA,WAAW,EAAED;AAFR,KAAP;AAID;;AACD,SAAOV,gBAAP;AACD,CAZD;;AAcA,MAAMe,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCpB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAIA,QAAMmB,gBAAgB,GAAIV,IAAD,IAAU;AACjCS,IAAAA,kBAAkB,CAAC;AAAEZ,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMW,kBAAkB,GAAIC,EAAD,IAAQ;AACjCH,IAAAA,kBAAkB,CAAC;AAAEZ,MAAAA,IAAI,EAAE,QAAR;AAAkBG,MAAAA,IAAI,EAAEY;AAAxB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEgB,SAAS,CAAChB,KADC;AAElBU,IAAAA,WAAW,EAAEM,SAAS,CAACN,WAFL;AAGlBY,IAAAA,OAAO,EAAEJ,gBAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultcartState = {\r\n  items: [],\r\n  amount: 0,\r\n};\r\nconst cardReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedItems = state.items.concat(action.item);\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    console.log(state.totalAmount);\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultcartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cardReducer,\r\n    defaultcartState\r\n  );\r\n  const AddToCartHendler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const RemoveItemFromCart = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", item: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: AddToCartHendler,\r\n    removeItem: RemoveItemFromCart,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}