{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\techno city\\\\Desktop\\\\udemy food\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cardReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingCartIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.items.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultcartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cardReducer, defaultcartState);\n\n  const AddToCartHendler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const RemoveItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      item: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: AddToCartHendler,\n    removeItem: RemoveItemFromCart\n  };\n  console.log(cartContext.totalAmount);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"SxdyLGZ5uKDgYcj6eKNk3HR0yXI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/techno city/Desktop/udemy food/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultcartState","items","totalAmount","cardReducer","state","action","type","existingCartIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","updatedTotalAmount","price","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","AddToCartHendler","RemoveItemFromCart","cartContext","addItem","removeItem","console","log","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultcartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\nconst cardReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const existingCartIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartIndex];\r\n\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n\r\n    const existingItem = state.items[existingCartIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.items.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultcartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cardReducer,\r\n    defaultcartState\r\n  );\r\n  const AddToCartHendler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const RemoveItemFromCart = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", item: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: AddToCartHendler,\r\n    removeItem: RemoveItemFromCart,\r\n  };\r\n  console.log(cartContext.totalAmount);\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}