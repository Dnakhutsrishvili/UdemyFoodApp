{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\techno city\\\\Desktop\\\\udemy food\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cardReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const existingCartIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItems = state.items[existingCartIndex];\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultcartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cardReducer, defaultcartState);\n\n  const AddToCartHendler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const RemoveItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      item: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: AddToCartHendler,\n    removeItem: RemoveItemFromCart\n  };\n  console.log(cartContext.totalAmount);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"SxdyLGZ5uKDgYcj6eKNk3HR0yXI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/techno city/Desktop/udemy food/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultcartState","items","totalAmount","cardReducer","state","action","type","updatedItems","concat","item","existingCartIndex","findIndex","id","existingCartItems","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","AddToCartHendler","RemoveItemFromCart","cartContext","addItem","removeItem","console","log","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AAEA,UAAMC,iBAAiB,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CACvBF,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EADV,CAA1B;AAIA,UAAMC,iBAAiB,GAAGT,KAAK,CAACH,KAAN,CAAYS,iBAAZ,CAA1B;AAEA,UAAMI,kBAAkB,GACtBV,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYM,KAAZ,GAAoBV,MAAM,CAACI,IAAP,CAAYO,MADtD;AAGA,WAAO;AACLf,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEY;AAFR,KAAP;AAID;;AACD,SAAOd,gBAAP;AACD,CAnBD;;AAqBA,MAAMiB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAIA,QAAMqB,gBAAgB,GAAIZ,IAAD,IAAU;AACjCW,IAAAA,kBAAkB,CAAC;AAAEd,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMa,kBAAkB,GAAIV,EAAD,IAAQ;AACjCQ,IAAAA,kBAAkB,CAAC;AAAEd,MAAAA,IAAI,EAAE,QAAR;AAAkBG,MAAAA,IAAI,EAAEG;AAAxB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMW,WAAW,GAAG;AAClBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADC;AAElBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFL;AAGlBsB,IAAAA,OAAO,EAAEH,gBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAMAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACrB,WAAxB;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEqB,WAA7B;AAAA,cACGL,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMX,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultcartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\nconst cardReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedItems = state.items.concat(action.item);\r\n\r\n    const existingCartIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingCartItems = state.items[existingCartIndex];\r\n\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultcartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cardReducer,\r\n    defaultcartState\r\n  );\r\n  const AddToCartHendler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const RemoveItemFromCart = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", item: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: AddToCartHendler,\r\n    removeItem: RemoveItemFromCart,\r\n  };\r\n  console.log(cartContext.totalAmount);\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}